---
layout: post
title:  "Javascript forkify 따라하기"
date:   2020-07-08 00:10:27 +0900
categories: Javascript
---

Udemy - [The Complete JavaScript Course 2020: Build Real Projects!](https://www.udemy.com/course/the-complete-javascript-course/) 강좌의 섹션 9. Modern JavaScript: Using ES6, NPM, Babel and Webpack을 요약한 내용입니다.

## 0. Modern Javascript
- 요즘은 과거와 달리 다양한 툴과 함께 javascript 사용함. Node js와 NPM ecosystem 기반.

### 1) NPM 
- Node Package Manager. 개발에 필요한 각종 라이브러리(예: Lodash, Jquery), 프레임워크(예: React, Angular), 툴(예: Babel, webpack)을 설치하고 관리하는 command line interface 

- package.json : 프로젝트에 대한 정보 담고있는 파일. 공동작업할 때 프로젝트의 package.json 파일을 NPM으로 읽고 필요한 dependency 설치하는 식으로 사용. 
    + npmm install dependencyName --save-dev 커맨드로 설치한 dependency는 해당 프로젝트에서만 사용 가능
    + 같은 컴퓨터의 다른 프로젝트에서도 사용하고 싶다면 sudo npm install dependencyName --global 커맨드로 설치. 
    + scripts에 "dev" : "webpack" 쓰고 저장하면, 터미널에서 npm run dev 입력했을 때 webpack config.js파일 찾아서 적힌대로 webpack 실행.

### 2) Webpack 
- 아직 브라우저에서 ES6 모듈 지원 안됨 -> webpack이 모듈 모아서 module bundler라는 하나의 파일로 만들어줌. 모듈뿐만 아니라 이미지 파일, css 등도 bundle로 만들 수 있음.

- configuration: 환경설정. 간단한 static website는 configuration할 필요 없음.
    + entry point : webpack이 bundling 시작하는 곳. bundle로 만들어야 할 dependencies 찾는 곳. 
    + output : bundle 저장할 곳. path, filename property 갖는 object로 작성. path는 absolute path라야 함. filename은 보통 bundle.js
    + loaders 
    + plugins 
    + mode : development(최적화 하지 않고 bundler 만드는 모드), production(minification, tree shaking 등 최적화 진행하는 모드)

- webpack cli : webpack command line interface
- webpack dev server: 코드 저장할 때마다 자동으로 웹페이지 리로드해주는 프로그램. 

{% highlight javascript %}
// path는 built in Node package
const path = require('path');

module.exports = {
    entry: './src/js/index.js'
    output: {
        // __dirname은 현재 위치의 absolute path, disst/js는 bundle을 저장할 곳
        path: path.resolve(__dirname, 'dist/js'),
        filename: 'bundle.js'
    },
    mode: 'development'

}
{% endhighlight %}  


### 3) Babel 
- Babel : ES6 이상 버전을 ES5 버전으로 transpile


<br/>

## 1. Command Line
- ls, cd, pwd
- cd .. : 한 칸 위로
- 파일명 입력하다가 탭 누르면 자동 완성
- mkdir : 폴더 만들기
- touch : 파일 만들기
- cp : 복사 (cp 파일명 폴더명 / 부모 폴더로 복사 예: cp index.html ..)
- mv : 이동 (mv 파일명 폴더명 / 부모 폴더로 이동 예: mv index.html ..)
- rm : 삭제 (rm 파일명). 휴지통으로 안가고 영영 삭제됨
- rm -r : 폴더와 내용물 삭제 (rm -r 폴더명). r은 recursively를 뜻함
- open : 파일 열기 (open 파일명)

