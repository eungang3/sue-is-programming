---
layout: post
title:  "Free code camp 자바스크립트편에서 기억할 내용"
date:   2020-05-14 22:35:27 +0900
categories: Javascript
---


## javascript basic

- %는 remainder operator, modulus와는 다름(modulus는 음수에도 작동하지만 remainder는 양수에만 작동)
- 이스케이프 문자열: 이스케이프 문자("나 ', 탭, 새로운 라인 등)를 쓸 때는 백슬래시\를 같이 써야 스트링으로 처리됨.
예) var quote = "she said, \"Ok\".";
- 스트링의 값은 immutable. 한번 지정한 값을 새로 assign할 수 없다는 뜻. 한 글자를 바꾸려면 스트링 전체를 새로 assign해야 함.
- 함수 : 파라미터는 placeholder로 쓰이는 변수, 인자는 변수에 실제로 들어가는 값
- 유효범위(스코프) : 
    무엇이 어떤 변수에 접근할 수 있는지 정해줌. 
    함수 블록 바깥에 정의된 변수는 글로벌 스코프를 가짐 (=자바스크립트 문서 내에서 어떤 함수든 접근 가능)
    var, let, const 키워드 없이 변수 정의내리면 자동으로 글로벌 변수가 됨

    + var : 함수 단위의 스코프를 가짐, 같은 변수 두 번 선언해도 오류 안남.
    + const : ES6부터, 블록 스코프 가짐, 상수 선언, 재정의 안됨
    + let : ES6부터, 블록 스코프 가짐, 재정의 가능, 같은 변수 두번 선언하면 오류

- 동등 연산자 equality operator (==) : 양 쪽의 값을 같은 타입으로 자동으로 바꿔서 비교, 반대는 부등 연산자(!=)
- 일치 연산자 strict equality operator (===) : 양 쪽 타입이 다르면 false 리턴, 반대는 불일치 연산자(!==)

<br/>

## javascript ES6
- rest parameter : 파라미터에 몇 개 인자가 들어올 지 모르는 경우 사용, 인자는 array로 저장, 일반 파라미터와 섞어서 쓰는 경우 항상 일반 파라미터 뒤에 붙여야 함.
{% highlight javascript %}
function test(arg1, ...args) {
    console.log(args1);
    console.log(args);
}

test("a", "b", "c"); 
//a 출력
//["b", "c"] 출력 
{% endhighlight %}

- spread operator '...' : iterable(array, string 등) 속 내용물을 꺼내놓을 때 사용. ('[]'를 벗김) 
{% highlight javascript %}
function add(x, y, z){
  return x + y + z;
}

const array1 = [1, 2, 3];
console.log(add(...array1)); // 6 출력
{% endhighlight %}

{% highlight javascript %}
//array 복사할 때도 사용
const arr1 = [1, 2, 3, 4];
const arr2 = [...arr1];
const arr3 = ...arr1; // error
{% endhighlight %}

- Destructing Assignment : 